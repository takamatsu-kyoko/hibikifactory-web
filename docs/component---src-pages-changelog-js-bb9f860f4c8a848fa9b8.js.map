{"version":3,"file":"component---src-pages-changelog-js-bb9f860f4c8a848fa9b8.js","mappings":"qMAEe,SAASA,EAAT,GAAqC,IAAXC,EAAU,EAAVA,OACrC,OACI,0BAASA,EAAOC,KAAhB,KAAyBD,EAAOE,QAAhC,KAA4CF,EAAOG,KAAnD,K,m0BCCO,SAASC,EAAT,GAsDX,IAtDuD,IAsDvD,EAtDsD,IAArBC,MAAAA,OAAqB,WAAbC,EAAa,EAChDC,GAAOC,EAAAA,EAAAA,IAAe,aAoDxBC,EAAU,GACd,IAAiBF,EAAMG,WAAWC,SAAlC,aAAyC,CAAC,IAAjCC,EAAgC,QACrCH,EAAQI,KAAK,CACTC,GAAIF,EAAKE,GACTb,KAAM,YACNE,KAAMS,EAAKT,KACXD,QAASU,EAAKV,QACda,YAAaH,EAAKG,YAClBC,IAAKJ,EAAKI,IACVC,KAAML,EAAKK,OAInB,cAAiBV,EAAMW,eAAeP,SAAtC,aAA6C,CAAC,IAArCC,EAAoC,QACL,OAAhCA,EAAKO,YAAYC,YAGrBX,EAAQI,KAAK,CACTC,GAAIF,EAAKE,GACTb,KAAM,SACNE,KAAMS,EAAKO,YAAYC,WACvBlB,QAASU,EAAKO,YAAYE,MAC1BL,IAAK,KACLC,KAAML,EAAKK,OAInB,cAAiBV,EAAMe,aAAaX,SAApC,aAA2C,CAAC,IAAnCC,EAAkC,QACvCH,EAAQI,KAAK,CACTC,GAAIF,EAAKE,GACTb,KAAM,OACNE,KAAMS,EAAKO,YAAYI,aACvBrB,QAASU,EAAKO,YAAYE,MAC1BL,IAAK,KACLC,KAAML,EAAKK,OAUnB,OANAR,EAAQe,MAAK,SAACC,EAAGC,GACb,OAAID,EAAEtB,KAAOuB,EAAEvB,KAAa,EACxBsB,EAAEtB,KAAOuB,EAAEvB,MAAc,EACtB,KAIP,0BAEQM,EAAQkB,MAAM,EAAGtB,EAAQuB,SAASvB,QAASC,GAAWuB,KAAK,SAAA7B,GAAM,OAC7D,gBAACD,EAAD,CAAgB+B,IAAM9B,EAAOc,GAAKd,OAASA,U,mECxGhD,SAAS+B,IACpB,OACI,8BACI,+BACI,kCACA,+DAEJ,+BACI,0BACI,mCACA,0BACI,sDACA,wDACA,qDACA,qD,6ECbT,SAASC,IACpB,OACI,2BACI,0BACI,0BAAI,gBAAC,KAAD,CAAMC,GAAE,KAAR,SACJ,0BAAI,gBAAC,KAAD,CAAMA,GAAE,UAAR,SACJ,mCACA,0BAAI,gBAAC,KAAD,CAAMA,GAAE,eAAR,UCNL,SAASC,IACpB,OACI,8BACI,kCACA,gBAACF,EAAD,S,6ECLG,SAASG,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACnC,OACI,0BACI,gBAAC,KAAD,CAAMH,GAAE,cAAgBG,EAAKnB,MAAUmB,EAAKjB,YAAYE,QCDrD,SAASgB,IACpB,IAAMC,GAAM9B,EAAAA,EAAAA,IAAe,cA2B3B,OACI,+BACI,uCAEI8B,EAAKC,OAAOC,MAAMX,KAAI,SAAAY,GAAQ,OAC1B,2BAASX,IAAMW,EAASC,YACpB,0BAAMD,EAASC,YACf,0BAEQD,EAASE,MAAMd,KAAI,SAAAe,GAAS,OACxB,gBAACT,EAAD,CAAcL,IAAMc,EAAUC,KAAK/B,GAAKsB,KAAOQ,EAAUC,gBCvC9E,SAASC,IACpB,OACI,6BACI,gBAACT,EAAD,S,iGCDG,SAASU,EAAT,GAA4C,EAAvBC,WAAwB,IAAZC,EAAW,EAAXA,SAC5C,OACI,2BACI,gBAAC,IAAD,MACA,4BACMA,GAEN,gBAAC,IAAD,MACA,gBAAC,IAAD,S,oGCTG,SAASC,IACpB,OACI,gBAAC,IAAD,KACI,wCACA,gBAAC,IAAD","sources":["webpack://gatsby-starter-hello-world/./src/components/change_list_item.js","webpack://gatsby-starter-hello-world/./src/components/change_list.js","webpack://gatsby-starter-hello-world/./src/components/footer.js","webpack://gatsby-starter-hello-world/./src/components/main_menu.js","webpack://gatsby-starter-hello-world/./src/components/header.js","webpack://gatsby-starter-hello-world/./src/components/blog_list_item.js","webpack://gatsby-starter-hello-world/./src/components/blog_list.js","webpack://gatsby-starter-hello-world/./src/components/side_bar.js","webpack://gatsby-starter-hello-world/./src/layouts/base_layout.js","webpack://gatsby-starter-hello-world/./src/pages/changelog.js"],"sourcesContent":["import React from \"react\"\n\nexport default function ChangeListItem({ update }) {\n    return (\n        <li>{ `${update.type}: ${update.summary} (${update.date})` }</li>\n    )\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport ChangeListItem from \"./change_list_item\"\n\nexport default function ChangeList({ limit = undefined }) {\n    const query =useStaticQuery(graphql`\nquery {\n  change_log: allChangelogYaml(sort: {fields: date, order: DESC}) {\n    nodes {\n      id\n      date(formatString: \"YYYY-MM-DD\")\n      summary\n      description\n      url\n      slug\n    }\n  }\n  recent_posts: allMdx(\n    filter: {\n      fields: {\n        fileSourceInstanceName: {eq: \"blog\"},\n        fileName: {eq: \"index\"}\n      },\n      frontmatter: {status: {nin: [\"draft\"]}}\n    }\n    sort: {fields: frontmatter___published_on, order: DESC}\n  ) {\n    nodes {\n      id\n      slug\n      frontmatter {\n        title\n        published_on(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n  recent_updates: allMdx(\n    filter: {\n      fields: {\n        fileSourceInstanceName: {eq: \"blog\"},\n        fileName: {eq: \"index\"}\n      },\n      frontmatter: {status: {nin: [\"draft\"]}}\n    }\n    sort: {fields: frontmatter___updated_on, order: DESC}\n  ) {\n    nodes {\n      id\n      slug\n      frontmatter {\n        title\n        updated_on(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n}\n`)\n    let updates = []\n    for (let item of query.change_log.nodes) {\n        updates.push({\n            id: item.id,\n            type: 'changelog',\n            date: item.date,\n            summary: item.summary,\n            description: item.description,\n            url: item.url,\n            slug: item.slug,\n        })\n    }\n\n    for (let item of query.recent_updates.nodes) {\n        if (item.frontmatter.updated_on === null) {\n            continue\n        }\n        updates.push({\n            id: item.id,\n            type: 'update',\n            date: item.frontmatter.updated_on,\n            summary: item.frontmatter.title,\n            url: null,\n            slug: item.slug,\n        })\n    }\n\n    for (let item of query.recent_posts.nodes) {\n        updates.push({\n            id: item.id,\n            type: 'post',\n            date: item.frontmatter.published_on,\n            summary: item.frontmatter.title,\n            url: null,\n            slug: item.slug,\n        })\n    }\n\n    updates.sort((a, b) => {\n        if (a.date < b.date) return 1\n        if (a.date > b.date) return -1\n        return 0\n    })\n\n    return (\n        <ul>\n            {\n                updates.slice(0, limit ? parseInt(limit) : undefined).map( update  => (\n                    <ChangeListItem key={ update.id } update={ update } />\n                ))\n            }\n        </ul>\n    )\n}\n","import React from \"react\"\n\nexport default function Footer() {\n    return (\n        <footer>\n            <section>\n                <h2>響製作所</h2>\n                <span>https://www.hibikifactory.net/</span>\n            </section>\n            <section>\n                <ul>\n                    <li>高松 響子</li>\n                    <ul>\n                        <li>Twitter: takamatsu_kyoko</li>\n                        <li>Instagram: takamatsu_kyoko</li>\n                        <li>GitHub: takamatsu-kyoko</li>\n                        <li>T&apos;sLove: id 45642</li>\n                    </ul>\n                </ul>\n            </section>\n        </footer>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function MainMenu() {\n    return (\n        <nav>\n            <ul>\n                <li><Link to={`/`}>Home</Link></li>\n                <li><Link to={`/blog/`}>Blog</Link></li>\n                <li>About</li>\n                <li><Link to={`/changelog/`}>Log</Link></li>\n            </ul>\n        </nav>\n    )\n}\n","import React from \"react\"\n\nimport MainMenu from './main_menu'\n\nexport default function Header() {\n    return (\n        <header>\n            <h1>Logo</h1>\n            <MainMenu />\n        </header>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function BlogListItem({ blog }) {\n    return (\n        <li>\n            <Link to={`/blog/post/${blog.slug}`}>{ blog.frontmatter.title }</Link>\n        </li>\n    )\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport BlogListItem from \"./blog_list_item\"\n\nexport default function BlogList() {\n    const data =useStaticQuery(graphql`\nquery {\n  allMdx(\n    filter: {\n      fields: {\n        fileSourceInstanceName: {eq: \"blog\"},\n        fileName: {eq: \"index\"}\n      },\n      frontmatter: {status: {nin: [\"draft\"]}}\n    }\n    sort: {fields: frontmatter___published_on, order: DESC}\n  ) {\n    group(field: frontmatter___categories) {\n      fieldValue\n      edges {\n        node {\n          id\n          slug\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n}\n`)\n    return (\n        <section>\n            <h2>Blog List</h2>\n            {\n                data.allMdx.group.map(category => (\n                    <section key={ category.fieldValue }>\n                        <h3>{ category.fieldValue }</h3>\n                        <ul>\n                            {\n                                category.edges.map(list_item => (\n                                    <BlogListItem key={ list_item.node.id } blog={ list_item.node } />\n                                ))\n                            }\n                        </ul>\n                    </section>\n                ))\n            }\n        </section>\n    )\n}\n","import React from \"react\"\n\nimport BlogList from './blog_list'\n\nexport default function SideBar() {\n    return (\n        <aside>\n            <BlogList />\n        </aside>\n    )\n}\n","import React from 'react'\n\nimport Header from '../components/header'\nimport SideBar from '../components/side_bar'\nimport Footer from '../components/footer'\n\nexport default function BaseLayout({pagetitele, children}) {\n    return (\n        <div>\n            <Header />\n            <main>\n                { children }\n            </main>\n            <SideBar />\n            <Footer />\n        </div>\n    )\n}\n","import React from \"react\"\n\nimport BaseLayout from '../layouts/base_layout'\nimport ChangeList from '../components/change_list'\n\nexport default function ChangeLog() {\n    return (\n        <BaseLayout>\n            <h1>Change log</h1>\n            <ChangeList/>\n        </BaseLayout>\n    )\n}\n\n"],"names":["ChangeListItem","update","type","summary","date","ChangeList","limit","undefined","query","useStaticQuery","updates","change_log","nodes","item","push","id","description","url","slug","recent_updates","frontmatter","updated_on","title","recent_posts","published_on","sort","a","b","slice","parseInt","map","key","Footer","MainMenu","to","Header","BlogListItem","blog","BlogList","data","allMdx","group","category","fieldValue","edges","list_item","node","SideBar","BaseLayout","pagetitele","children","ChangeLog"],"sourceRoot":""}